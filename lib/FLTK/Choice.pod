=pod

=head1 NAME

FLTK::Choice - Popup list of items that the user can choose one of

=head1 Description

Subclass of L<FLTK::Menu> that provides a button that pops up the menu, and
also displays the text of the most-recently selected menu item.

The appearance is designed to look like an "uneditable ComboBox" in Windows,
but it is somewhat different in that it does not contain a text editor, also
the menu pops up with the current item under the cursor, which is immensely
easier to use once you get used to it. This is the same UI as the Macintosh
and Motif, which called this an OptionButton.

The user can change the value by popping up the menu by clicking anywhere in
the widget and moving the cursor to a different item, or by typing up and down
arrow keys to cycle amoung the items. Typing the
L<C<FLTK::Widget::shortcut()>|FLTK::Widget/"shortcut"> of any of the items
will also change the value to that item.

If you set a L<C<shortcut()>|FLTK::Widget/"shortcut"> on this widget itself or
put C<&x> in the label, that shortcut will pop up the menu. The user can then
use arrow keys or the mouse to change the selected item.

When the user changes the L<C<value()>|/"value"> the callback is done.

If you wish to display text that is different than any of the menu items, you
may instead want an L<FLTK::PopupMenu>. It works identically but instead
displays an empty box with the label() inside it, you can then change the
L<C<label()>|/"label"> as needed.

If you want a "real" ComboBox where the user edits the text, this is a planned
addition to the L<FLTK::Input> widget. All text input will have menus of
possible replacements and completions. Not yet implemented, unfortunately.

=head1 Functions

=head2 C<default_style>
X<default_style>

=over

=item C<my $style = $choice-E<gt>default_style( );>X<my_style_choice_E_gt_default_style_>

Get the style

=for hackers xs/Choice.xs line 80

=item C<$choice-E<gt>default_style( $style );>X<_choice_E_gt_default_style_style_>

Set the style.

=for hackers xs/Choice.xs line 84

=back

=head2 C<draw>
X<draw>

=over

=item C<$choice-E<gt>draw( );>X<_choice_E_gt_draw_>

You can change the icon drawn on the right edge by setting
L<C<glyph()>|/"glyph"> to your own function that draws whatever you want.

=pod 

=for hackers xs/Choice.xs line 101

=back

=head2 C<new>
X<new>

=over

=item C<my $self = $choice-E<gt>new( $x, $y, $w, $h, $label );>X<my_self_choice_E_gt_new_x_y_w_h_label_>

The constructor makes the menu empty. See L<Menu|FLTK::Menu> and
L<StringList|FLTK::StringList> for information on how to set the menu to a
list of items.

=for hackers xs/Choice.xs line 59

=back

=head1 Author

Sanko Robinson <sanko@cpan.org> - http://sankorobinson.com/

=head1 License and Legal

Copyright (C) 2008-2010 by Sanko Robinson <sanko@cpan.org>

This program is free software; you can redistribute it and/or modify it under
the terms of
L<The Artistic License 2.0|http://www.perlfoundation.org/artistic_license_2_0>.
See the F<LICENSE> file included with this distribution or
L<notes on the Artistic License 2.0|http://www.perlfoundation.org/artistic_2_0_notes>
for clarification.

When separated from the distribution, all original POD documentation is
covered by the
L<Creative Commons Attribution-Share Alike 3.0 License|http://creativecommons.org/licenses/by-sa/3.0/us/legalcode>.
See the
L<clarification of the CCA-SA3.0|http://creativecommons.org/licenses/by-sa/3.0/us/>.


=for git $Id: Choice.xs c629eeb 2010-09-27 04:12:30Z sanko@cpan.org $

=cut
