=pod

=head1 NAME

FLTK::InputBrowser - Input Browser (Combo Box) widget

=head1 Description

MicroSoft style "ComboBox" with the menu appearing below with a scrollbar. I
would like to use the name "ComboBox" or "InputChoice" for a more
user-friendly version which uses pop-up menus and positions the menu with the
cursor pointing at the current item, but this version can be used to get what
MicroSoft users expect. The implementation is a good example of how to get a
widget to appear in a modal pop-up window.

=head1 Functions

=head2 C<hide_popup>
X<hide_popup>

=over

=item C<$inputbrowser-E<gt>hide_popup( );>X<_inputbrowser_E_gt_hide_popup_>



=for hackers xs/InputBrowser.xs line 100

=back

=head2 C<item>
X<item>

=over

=item C<my $ret = $inputbrowser-E<gt>item( );>X<my_ret_inputbrowser_E_gt_item_>



=for hackers xs/InputBrowser.xs line 112

=item C<my $ret = $inputbrowser-E<gt>item( $widget );>X<my_ret_inputbrowser_E_gt_item_widget_>



=for hackers xs/InputBrowser.xs line 116

=back

=head2 C<maxh>
X<maxh>

=over

=item C<$inputbrowser-E<gt>maxh( $height );>X<_inputbrowser_E_gt_maxh_height_>



=for hackers xs/InputBrowser.xs line 171

=item C<my $h = $inputbrowser-E<gt>maxh( );>X<my_h_inputbrowser_E_gt_maxh_>



=for hackers xs/InputBrowser.xs line 175

=back

=head2 C<maxw>
X<maxw>

=over

=item C<$inputbrowser-E<gt>maxw( $width );>X<_inputbrowser_E_gt_maxw_width_>



=for hackers xs/InputBrowser.xs line 163

=item C<my $w = $inputbrowser-E<gt>maxw( );>X<my_w_inputbrowser_E_gt_maxw_>



=for hackers xs/InputBrowser.xs line 167

=back

=head2 C<minh>
X<minh>

=over

=item C<$inputbrowser-E<gt>minh( $height );>X<_inputbrowser_E_gt_minh_height_>



=for hackers xs/InputBrowser.xs line 137

=item C<my $h = $inputbrowser-E<gt>minh( );>X<my_h_inputbrowser_E_gt_minh_>



=for hackers xs/InputBrowser.xs line 141

=back

=head2 C<minw>
X<minw>

=over

=item C<$inputbrowser-E<gt>minw( $width );>X<_inputbrowser_E_gt_minw_width_>



=for hackers xs/InputBrowser.xs line 129

=item C<my $w = $inputbrowser-E<gt>minw( );>X<my_w_inputbrowser_E_gt_minw_>



=for hackers xs/InputBrowser.xs line 133

=back

=head2 C<new>
X<new>

=over

=item C<my $self = $inputbrowser-E<gt>new( $x, $y, $w, $h, $label );>X<my_self_inputbrowser_E_gt_new_x_y_w_h_label_>

Creates a new C<FLTK::InputBrowser> object. Obviously.

=for hackers xs/InputBrowser.xs line 45

=back

=head2 C<popup>
X<popup>

=over

=item C<$inputbrowser-E<gt>popup( );>X<_inputbrowser_E_gt_popup_>



=for hackers xs/InputBrowser.xs line 96

=back

=head2 C<text>
X<text>

=over

=item C<$inputbrowser-E<gt>text( $string );>X<_inputbrowser_E_gt_text_string_>



=for hackers xs/InputBrowser.xs line 197

=item C<my $string = $inputbrowser-E<gt>text( );>X<my_string_inputbrowser_E_gt_text_>



=pod 

=for hackers xs/InputBrowser.xs line 201

=back

=head1 Values for L<C<type()>|FLTK::Widget/"type">

=over 

=item C<NORMAL>

=item C<NONEDITABLE>

=item C<INDENTED>

=item C<NONEDITABLE_INDENTED>

=back 

=head1 Author

Sanko Robinson <sanko@cpan.org> - http://sankorobinson.com/

=head1 License and Legal

Copyright (C) 2008-2010 by Sanko Robinson <sanko@cpan.org>

This program is free software; you can redistribute it and/or modify it under
the terms of
L<The Artistic License 2.0|http://www.perlfoundation.org/artistic_license_2_0>.
See the F<LICENSE> file included with this distribution or
L<notes on the Artistic License 2.0|http://www.perlfoundation.org/artistic_2_0_notes>
for clarification.

When separated from the distribution, all original POD documentation is
covered by the
L<Creative Commons Attribution-Share Alike 3.0 License|http://creativecommons.org/licenses/by-sa/3.0/us/legalcode>.
See the
L<clarification of the CCA-SA3.0|http://creativecommons.org/licenses/by-sa/3.0/us/>.


=for git $Id: InputBrowser.xs 7483df2 2011-04-09 05:42:22Z sanko@cpan.org $

=cut
