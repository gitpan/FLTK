=pod

=head1 NAME

FLTK::NumericInput - One-line text input field for basic math and numeric expressions

=head1 Description

The L<NumericInput|FLTK::NumericInput> class is a subclass of
L<FLTK::Input|FLTK::Input> that redefines the up and down arrow keys to
increment and decrement the digit of the number to the right of the cursor.
This makes it very easy to edit numbers.

If you change L<C<when( )>|FLTK::Widget/"when"> to C<WHEN_ENTER_KEY>, the
callback is only done when the user hits the up/down arrow keys or when the
user types the C<Enter> key. This may be more useful than the default setting
of C<WHEN_CHANGED> which can make the callback happen when partially-edited
numbers are in the field.

This version lets the user type any text into the field. This is useful if you
run the text through an expression parser so the user can type in math
expressions. However if you want to limit the input to text that can be run
through C<strtol()> or C<strtod()> you should use the subclasses
L<IntInput|FLTK::IntInput> or L<FloatInput|FLTK::FloatInput>.

When you construct the widget the text starts out blank. You may want to set
it with L<C<value( 0 )>|FLTK::NumericInput/"value"> or something.

=head1 Functions

=head2 C<new>
X<new>

=over

=item C<my $input = $numericinput-E<gt>new( $x, $y, $w, $h, $label );>X<my_input_numericinput_E_gt_new_x_y_w_h_label_>

Creates a new C<FLTK::NumericInput> object.

=for hackers xs/NumericInput.xs line 58

=back

=head2 C<value>
X<value>

=over

=item C<$numericinput-E<gt>value( $val );>X<_numericinput_E_gt_value_val_>

Correctly formats C<$val> and uses the result to set the string value.

=for hackers xs/NumericInput.xs line 77

=item C<my $val = $numericinput-E<gt>value( );>X<my_val_numericinput_E_gt_value_>

Returns the value. Duh.

=pod 

=for hackers xs/NumericInput.xs line 81

=back

=head1 Author

Sanko Robinson <sanko@cpan.org> - http://sankorobinson.com/

=head1 License and Legal

Copyright (C) 2008-2010 by Sanko Robinson <sanko@cpan.org>

This program is free software; you can redistribute it and/or modify it under
the terms of
L<The Artistic License 2.0|http://www.perlfoundation.org/artistic_license_2_0>.
See the F<LICENSE> file included with this distribution or
L<notes on the Artistic License 2.0|http://www.perlfoundation.org/artistic_2_0_notes>
for clarification.

When separated from the distribution, all original POD documentation is
covered by the
L<Creative Commons Attribution-Share Alike 3.0 License|http://creativecommons.org/licenses/by-sa/3.0/us/legalcode>.
See the
L<clarification of the CCA-SA3.0|http://creativecommons.org/licenses/by-sa/3.0/us/>.


=for git $Id: NumericInput.xs c629eeb 2010-09-27 04:12:30Z sanko@cpan.org $

=cut
